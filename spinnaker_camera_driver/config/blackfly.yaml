#
# config file for blackfly cameras (GigE)
#
# This file maps the ros parameters to the corresponding Spinnaker "nodes" in the camera.
# For more details on how to modify this file, see the README on camera configuration files.

parameters:
  #
  # -------- image format control
  #
  - name: pixel_format
    type: enum
    # Check available values with SpinView. Not all are supported by ROS!
    # Some formats are e.g. "Mono8", "BayerRG8", "BayerRG16", "YUV444Packed"
    # default is "BayerRG8"
    node: ImageFormatControl/PixelFormat
  - name: image_width
    type: int
    node: ImageFormatControl/Width
  - name: image_height
    type: int
    node: ImageFormatControl/Height
  - name: offset_x # offset must come after image width reduction!
    type: int
    node: ImageFormatControl/OffsetX
  - name: offset_y
    type: int
    node: ImageFormatControl/OffsetY
  - name: video_mode
    type: enum
    # allowed video modes: Mode0, Mode4, Mode5, Mode7
    node: VideoMode
  - name: binning_x
    type: int
    # can only set binning in some video modes, e.g. Mode4
    node: ImageFormatControl/BinningHorizontal
  - name: binning_y
    type: int
    # can only set binning in some video modes, e.g. Mode4
    node: ImageFormatControl/BinningVertical

  #
  # -------- analog control
  #
  - name: gain_auto
    type: enum
    # valid values are "Continuous", "Off"
    node: AnalogControl/GainAuto
  - name: gain
    type: float
    node: AnalogControl/Gain
  #
  # -------- device link throughput limiting
  #
  - name: device_link_throughput_limit
    type: int
    node: DeviceControl/DeviceLinkThroughputLimit
  #
  # -------- transport layer control (GigE)
  #
  - name: gev_scps_packet_size
    type: int
    # default is 1400. Set to 9000 to enable jumbo frames, ensure NIC MTU set >= 9000
    node: TransportLayerControl/GevSCPSPacketSize
  #
  # -------- digital IO control
  #
  - name: line0_selector
    type: enum  # valid value: Line0
    node: DigitalIOControl/LineSelector
  - name: line1_selector # white wire: opto-isolated output
    type: enum  # valid value: Line1
    node: DigitalIOControl/LineSelector
  - name: line1_source # valid values: "ExposureActive", "ExternalTriggerActive", "UserOutput1"
    type: enum
    node: DigitalIOControl/LineMode
  #
  # -------- acquisition control
  #
  - name: exposure_auto
    type: enum
    # valid values are "Off", "Continuous"
    node: AcquisitionControl/ExposureAuto
  - name: exposure_time
    type: float
    node: AcquisitionControl/ExposureTime
  - name: trigger_mode
    type: enum
    # valid values are "On" and "Off"
    node: AcquisitionControl/TriggerMode
  - name: trigger_source
    type: enum
    # valid values are "Line0"
    node: AcquisitionControl/TriggerSource
  - name: trigger_selector
    type: enum
    # valid values are e.g. "FrameStart", "AcquisitionStart", "FrameBurstStart"
    node: AcquisitionControl/TriggerSelector
  - name: trigger_delay
    # value >= 9
    type: float
    node: AcquisitionControl/TriggerDelay
  - name: trigger_overlap
    type: enum
    # valid values: "Off" and "ReadOut"
    node: AcquisitionControl/TriggerOverlap
  - name: trigger_activation
    type: enum
    # valid values: "LevelLow", "LevelHigh", "FallingEdge", "RisingEdge", "AnyEdge",
    node: AcquisitionControl/TriggerActivation
  - name: frame_rate_enable  # must come after trigger_mode
    type: bool
    node: AcquisitionControl/AcquisitionFrameRateEnable
  - name: frame_rate
    type: float
    node: AcquisitionControl/AcquisitionFrameRate
  #
  # --------- chunk control
  #
  - name: chunk_mode_active
    type: bool
    node: ChunkDataControl/ChunkModeActive
  - name: chunk_selector_frame_counter
    type: enum
    # valid values: "FrameCounter"
    node: ChunkDataControl/ChunkSelector
  - name: chunk_enable_frame_id
    type: bool
    node: ChunkDataControl/ChunkEnable
  - name: chunk_selector_exposure_time
    type: enum
    # valid values: "ExposureTime"
    node: ChunkDataControl/ChunkSelector
  - name: chunk_enable_exposure_time
    type: bool
    node: ChunkDataControl/ChunkEnable
  - name: chunk_selector_gain
    type: enum
    # valid values: "Gain"
    node: ChunkDataControl/ChunkSelector
  - name: chunk_enable_gain
    type: bool
    node: ChunkDataControl/ChunkEnable
  - name: chunk_selector_timestamp
    type: enum
    # valid values: "Timestamp"
    node: ChunkDataControl/ChunkSelector
  - name: chunk_enable_timestamp
    type: bool
    node: ChunkDataControl/ChunkEnable
